============================================ Hello Angular ============================================

Angular Project Structure
    QuickStart
        Step 1: Install the Angular CLI
            npm install -g @angular/cli
        Step 2: Create a workspace and initial application
            ng new projectOne
                Would you like to add Angular routing? No
                CSS
        Step 3: Run the application
            cd projectOne
            ng serve --open
        Xem nội dung:
            angular\projectOne\src\app
                app.component.ts
                app.module.ts
                app.component.html
            angular\projectOne\src
                main.ts
                index.html
                styles.css
    Customize

Component Metadata 
    Selector
    Template
    TemplateURL
    Style, StyleURL

============================================ Template Setting ============================================

Multiple Components
    @Component({
        selector: 'my-study-multi-abc',
        template: '<h1>Study Multi ABC</h1>'
    })    
        @: Decorator indicator
        Component: Decorator name 
        (): Argument

Attribute
    Interpolation
    Class - Style
    Event binding
        using jquery in angular
            declare var jQuery:any;
    Two way binding

Built-in directives
    NgIF
    NgFor
    NgSwitch
    NgClass
    NgStyle

Setting Template
    Content & Template
    Custom template
    Optimized

============================================ Setting Color ============================================

Template reference variables

Sử dụng @Input và @Output
    Input
    Output

Template tag

Project 03: Setting Color
    Setting Color 01
    Setting Color 02
    Setting Color 03

============================================ List Course with Pipe & Custom Pipe ============================================

Sử dụng Pipe cơ bản
    Lowercase - Uppercase
    Slice
    Decimal
    Percent
    Currency
    Date
    Json

Xây dựng Pipe với PipeTransform
    Capitalize
    Array
    Summary
    Category

List Course with Pipe & Custom Pipe
    Project - Control
        1. @types/node をインストール
            npm install --save @types/node
        2. tsconfig.json に以下を記述
            "compilerOptions": {
                "types": ["node"]
            }
        3. src/tsconfig.app.json にも、同じく記述
            "compilerOptions": {
                "types": ["node"]
            }
        <img src="../assets/course/c01.jpg" alt="...">
    Data sample
    List Courses
    Setting 01
    Setting 02
    CourseCapitalizePipe
    CourseSummaryPipe
    CourseCategoryPipe
    CoursePricePipe

============================================ Expand and collapse content ============================================

Init
    Step 1: Install the Angular CLI
        npm install -g @angular/cli
    Step 2: Create a workspace and initial application
        ng new projectOne
            Would you like to add Angular routing? No
            CSS
    Step 3: Run the application
        cd projectFive
        ng serve --open
    An unhandled exception occurred: Port 4200 is already in use. Use '--port' to specify a different port
        ng serve --open --port 4201

index.html
    <!-- Bootstrap -->
    <link href="assets/css/bootstrap.min.css" rel="stylesheet">
    <link href="assets/css/styles.css" rel="stylesheet" >
	<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="assets/js/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="assets/js/bootstrap.min.js"></script>

HightLight Plugin
    Attribute Directive
    HostListener
    Param 1
    Param 2

Collapsed Plugin
    Is-collapsed
    Collapsed - expand
    ExportAs
    Span

============================================ Tab Container ============================================

Init
    Step 1: Install the Angular CLI
        npm install -g @angular/cli
    Step 2: Create a workspace and initial application
        ng new projectSix
            Would you like to add Angular routing? No
            CSS
    Step 3: Run the application
        cd projectSix
        ng serve --openng serve --open
    An unhandled exception occurred: Port 4200 is already in use. Use '--port' to specify a different port
        ng serve --open --port 4201
    moduleId: module.id(Khong can)

Structural Directive

Unless Directive
    Unless 1
    Unless 2

Delay Directive
    Delay

Xây dựng plugin với Structural Directive 
    Init
    SelectorDirective
    ContainDirective
    TabDirective
    Viết show method
    Structural Directive

============================================ View video programming on Youtube ============================================

Init
    Step 1: Install the Angular CLI
        npm install -g @angular/cli
    Step 2: Create a workspace and initial application
        ng new projectSix
            Would you like to add Angular routing? No
            CSS
    Step 3: Run the application
        cd projectSix
        ng serve --open
    An unhandled exception occurred: Port 4200 is already in use. Use '--port' to specify a different port
        ng serve --open --port 4201
    moduleId: module.id(Khong can)

Augury
LifeCycle Hooks
    LifeCycle hook
        Lập trình viên có thể dựa vào các hook trong LifeCycle để đưa ra các xử lý phù hợp
        Hook -> Interface -> hook method
        Thứ tự:
            ngOnInit
            ngDoCheck
            ngAfterContentInit
            ngAfterContentChecked
            ngAfterViewInit
            ngAfterViewChecked
            ngDoCheck
            ngAfterContentChecked
            ngAfterViewChecked
    OnInit - OnDestroy
        ngOnInit dùng khi khởi tạo các giá trị như thiết lập các giá trị trong một mảng nào đó...
        ngOnDestroy dùng khi clean
        Constructor nó được gọi đầu tiên trước tất cả các LifeCycle Hooks và nó thường tiêm vào các DI, tuy nhiên
            Constructor không phải là 1 hook nằm trong LifeCycle
    OnChanges 01
    OnChanges 02
    Ng-content 01
    Ng-content 02
    AfterContent 01
        ngAfterViewChecked(): Called after the ngAfterViewInit() and every subsequent. Khi có sự thay đổi thì sẽ được gọi
        ngAfterViewInit(): Called once after the first ngAfterContentChecked(). Nó chỉ được gọi một lần
        AfterContent -> thì sẽ thao tác với phần ng-content -> Sử dụng đến ContentChild để thao tác
        AfterView -> template -> Sử dụng ViewChild để thao tác
    AfterContent 02
    AfterView

Service & Dependency Injection
    DI 01
        Dependency Injection(DI) giúp giảm sự phụ thuộc giữa các lớp, tạo ra sự linh hoạt cao và tính dễ bảo trì cho ứng dụng
        Lợi ích khi sử DI: Giảm sự phụ thuộc giữa các class, tăng khả năng dùng lại và khả năng dễ đọc của mã nguồn, tạo cho ứng 
            dụng tính mềm dẻo và khả năng nâng cấp bảo trì trở nên đơn giản và nhanh chóng hơn
    DI 02
    LogService 01
    LogService 02
        providers: Khai báo để các thể hiện của Service nằm trong các component con nó cùng là 1 Service
        Khi ở component cha đã khai báo provider rồi thì ở trong các component con không cần khai báo provider đó nữa và trong các      
            component con nó có thể dùng chung provider đó
    CaculatorService - Init
        ng new projectSeven2
            Would you like to add Angular routing? No
            CSS
        cd projectSeven2
            ng serve --open
    CaculatorService
    CourseService

View video programming on Youtube
    YoutubeComponent
    Outline & Player
    Video Service
    Player Component
        unsafe value used in a resource URL context
    Outline Component
    Change video
    Change seen
    CookieService 01
        npm
        ng-cookie(Simple cookie service for AngularJS)
        npm i ng-cookies
        npm uninstall ng-cookies
        angular cookieservice
        angular-cookie
        npm install ngx-cookie-service
       